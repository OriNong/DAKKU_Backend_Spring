<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kr.re.kh.mapper.UploadFileMapper">

    <!-- 파일 조회 -->
    <select id="selectFileById" parameterType="Long" resultType="UploadFile">
        SELECT
            id,
            file_name,
            file_path,
            file_dir,
            content_type,
            file_size,
            save_file_name
        FROM upload_file
        WHERE id = #{id}
    </select>

    <!-- 파일 조회 -->
    <select id="selectFileByIdAndFileTarget" parameterType="UploadFile" resultType="UploadFile">
        SELECT
            id,
            file_name,
            file_path,
            file_dir,
            content_type,
            file_size,
            save_file_name
        FROM upload_file
        WHERE id = #{id}
            AND file_target = #{fileTarget}
    </select>

    <!-- save_file_name으로 파일 조회 -->
    <select id="selectFileAsSaveFileName" parameterType="String" resultType="UploadFile">
        SELECT
            id,
            file_name,
            file_path,
            file_dir,
            content_type,
            file_size,
            save_file_name
        FROM upload_file
        WHERE save_file_name = #{saveFileName}
    </select>

     <!-- board_id로 파일 조회 -->
    <select id="selectFileByBoardId" parameterType="Long" resultType="UploadFile">
        SELECT
            u.id,
            u.file_target,
            u.file_name,
            u.file_path,
            u.file_dir,
            u.content_type,
            u.file_size,
            u.save_file_name,
            u.created_at
        FROM file_map f
            LEFT JOIN upload_file u ON f.file_id = u.id
        WHERE f.board_id = #{id}
            ORDER BY id ASC
    </select>

    <!-- 파일 저장 -->
    <insert id="insertFile" parameterType="UploadFile" useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
        INSERT INTO upload_file (
            file_target,
            file_name,
            file_path,
            file_dir,
            content_type,
            save_file_name,
            file_size,
            created_at
        ) VALUES (
             #{fileTarget},
             #{fileName},
             #{filePath},
             #{fileDir},
             #{contentType},
             #{saveFileName},
             #{fileSize},
             SYSDATE
         )
    </insert>

    <!-- 첨부파일 삭제 -->
    <delete id="deleteByFileByIdAndFileTarget" parameterType="UploadFile">

        DELETE FROM upload_file WHERE id = #{id}
        <if test="fileTarget != null and fileTarget != ''">
            AND file_target = #{fileTarget}
        </if>



<!--        DELETE FROM file_map WHERE file_id = #{id}-->
<!--        <if test="fileTarget != null and fileTarget != ''">-->
<!--            AND file_target = #{fileTarget}-->
<!--        </if>;-->

    </delete>

    <!-- 프로필 이미지 조회 (사용자 ID로 프로필 이미지를 찾기) -->
    <select id="selectProfileImageByUserId" parameterType="Long" resultType="UploadFile">
        SELECT
        a.id,
        a.file_name,
        a.file_path,
        a.file_dir,
        a.content_type,
        a.file_size,
        a.save_file_name
        FROM upload_file a
        LEFT OUTER JOIN PROFILE_IMG_MAP b ON a.ID = b.FILE_ID
        WHERE a.file_target = 'profile'
        AND b.USER_ID = #{userId}
    </select>

    <!-- 프로필 이미지 저장 -->
    <insert id="insertProfileImage" parameterType="UploadFile" useGeneratedKeys="true" keyProperty="id" keyColumn="ID">
        INSERT INTO upload_file (
        file_target,
        file_name,
        file_path,
        file_dir,
        content_type,
        save_file_name,
        file_size,
        username,
        created_at
        ) VALUES (
        'profile',
        #{fileName},
        #{filePath},
        #{fileDir},
        #{contentType},
        #{saveFileName},
        #{fileSize},
        #{username},
        SYSDATE
        )
    </insert>

    <!-- 프로필 이미지 삭제 -->
    <delete id="deleteProfileImage" parameterType="Long">
        DELETE FROM upload_file WHERE id = #{fileId} AND file_target = 'profile'
    </delete>

    <insert id="insertProfileImgMap" parameterType="java.util.HashMap">
        INSERT INTO PROFILE_IMG_MAP (USER_ID, FILE_ID) VALUES (#{userId}, #{fileId})
    </insert>

    <delete id="deleteProfileImgMap" parameterType="Long">
        DELETE FROM PROFILE_IMG_MAP WHERE USER_ID = #{userId}
    </delete>

    <!-- 전체 사용자 이미지 조회-->
    <select id="getUserProfileImage" resultType="UserProfile">
        SELECT C.SAVE_FILE_NAME, A.USERNAME FROM USERS A
        LEFT OUTER JOIN PROFILE_IMG_MAP B ON A.USER_ID = B.USER_ID
        LEFT OUTER JOIN UPLOAD_FILE C ON B.FILE_ID = C.ID

    </select>

</mapper>